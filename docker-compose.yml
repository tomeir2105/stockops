version: "3.8"

services:
  influxdb:
    image: influxdb:2.7
    container_name: influxdb
    ports:
      - "8086:8086"
    env_file:
      - .env
    environment:
      - DOCKER_INFLUXDB_INIT_MODE=setup
      - DOCKER_INFLUXDB_INIT_USERNAME=${INFLUXDB_ADMIN_USER}
      - DOCKER_INFLUXDB_INIT_PASSWORD=${INFLUXDB_ADMIN_PASSWORD}
      - DOCKER_INFLUXDB_INIT_ORG=${INFLUXDB_ORG}
      - DOCKER_INFLUXDB_INIT_BUCKET=${INFLUXDB_BUCKET}
      - DOCKER_INFLUXDB_INIT_ADMIN_TOKEN=${INFLUXDB_ADMIN_TOKEN}
    volumes:
      - influx-data:/var/lib/influxdb2
      - influx-config:/etc/influxdb2
    restart: unless-stopped

  grafana:
    image: grafana/grafana:11.1.0
    container_name: grafana
    depends_on:
      - influxdb
    ports:
      - "3000:3000"
    env_file:
      - .env
    environment:
      - GF_SECURITY_ADMIN_USER=${GRAFANA_ADMIN_USER}
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_ADMIN_PASSWORD}
    volumes:
      - grafana-data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
    restart: unless-stopped

  fetcher:
    build: ./fetcher
    container_name: lse-fetcher
    depends_on:
      - influxdb
    # Do NOT use env_file here; we want .env to be hot-reloaded from the mounted file.
    environment:
      - INFLUX_URL=http://influxdb:8086
      - INFLUX_TOKEN=${INFLUXDB_ADMIN_TOKEN}
      - INFLUX_ORG=${INFLUXDB_ORG}
      - INFLUX_BUCKET=${INFLUXDB_BUCKET}
    volumes:
      # Hot-reload settings (tickers, intervals, etc.) are read from this file at /app/.env
      - ./.env:/app/.env:ro
    restart: unless-stopped

  news:
    build: ./news
    container_name: lse-news
    depends_on:
      - influxdb
    # No env_file; only stable Influx vars via environment:
    environment:
      - INFLUX_URL=http://influxdb:8086
      - INFLUX_TOKEN=${INFLUXDB_ADMIN_TOKEN}
      - INFLUX_ORG=${INFLUXDB_ORG}
      - INFLUX_BUCKET=${INFLUXDB_BUCKET}
    volumes:
      - ./.env:/app/.env:ro       # hot-reload news settings (tickers, filters, lookback)
      - ./feeds.yaml:/app/feeds.yaml:ro
    restart: unless-stopped

volumes:
  influx-data:
  influx-config:
  grafana-data:

