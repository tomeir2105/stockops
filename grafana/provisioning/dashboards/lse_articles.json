{
  "id": null,
  "uid": "lse-articles",
  "title": "LSE Articles",
  "schemaVersion": 39,
  "version": 3,
  "time": { "from": "now-24h", "to": "now" },
  "timezone": "utc",

  "templating": {
    "list": [
      {
        "name": "ticker",
        "type": "query",
        "label": "Ticker",
        "datasource": { "type": "influxdb", "uid": "influxdb-flux" },
        "definition": "import \"influxdata/influxdb/schema\"\nschema.tagValues(bucket: v.bucket, tag: \"ticker\")",
        "query": "import \"influxdata/influxdb/schema\"\nschema.tagValues(bucket: v.bucket, tag: \"ticker\")",
        "refresh": 2,
        "multi": true,
        "includeAll": true,
        "allValue": ".*",
        "current": { "text": "All", "value": "$__all" }
      },
      {
        "name": "source",
        "type": "query",
        "label": "Source",
        "datasource": { "type": "influxdb", "uid": "influxdb-flux" },
        "definition": "import \"influxdata/influxdb/schema\"\nschema.tagValues(bucket: v.bucket, tag: \"source\")",
        "query": "import \"influxdata/influxdb/schema\"\nschema.tagValues(bucket: v.bucket, tag: \"source\")",
        "refresh": 2,
        "multi": true,
        "includeAll": true,
        "allValue": ".*",
        "current": { "text": "All", "value": "$__all" }
      },
      {
        "name": "q",
        "type": "textbox",
        "label": "Search (title)",
        "query": "",
        "current": { "text": "", "value": "" }
      }
    ]
  },

  "panels": [
    {
      "type": "table",
      "title": "Articles",
      "gridPos": { "h": 22, "w": 24, "x": 0, "y": 0 },
      "targets": [
        {
          "datasource": { "type": "influxdb", "uid": "influxdb-flux" },
          "query": "import \"strings\"\nq = \"${q}\"\nfrom(bucket: v.bucket)\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r._measurement == \"lse_news\")\n  |> filter(fn: (r) => r.ticker =~ /^${ticker:regex}$/)\n  |> filter(fn: (r) => r.source =~ /^${source:regex}$/)\n  |> pivot(rowKey: [\"_time\",\"ticker\",\"source\"], columnKey: [\"_field\"], valueColumn: \"_value\")\n  |> map(fn: (r) => ({ r with _title_lc: strings.toLower(v: string(v: r.title)) }))\n  |> filter(fn: (r) => q == \"\" or strings.containsStr(v: r._title_lc, substr: strings.toLower(v: q)))\n  |> keep(columns: [\"_time\",\"ticker\",\"source\",\"title\",\"url\"]) \n  |> sort(columns: [\"_time\"], desc: true)"
        }
      ],
      "options": {
        "showHeader": true,
        "cellHeight": "sm",
        "footer": { "show": false, "fields": "", "reducer": [] },
        "filterable": false
      },
			"fieldConfig": {
				"defaults": {},
				"overrides": [
					{
						"matcher": {
						  "id": "byName",
						  "options": "title"
						},
						"properties": [
						  {
						    "id": "displayName",
						    "value": "Title"
						  }
						]
					},
					{
						"matcher": {
						  "id": "byName",
						  "options": "url"
						},
						"properties": [
						  {
						    "id": "displayName",
						    "value": "URL"
						  }
						]
					},
						{
						"matcher": {
						  "id": "byName",
						  "options": "Time"
						},
						"properties": [
						  {
						    "id": "custom.width",
						    "value": 160
						  }
						]
					},
					{
						"matcher": {
						  "id": "byName",
						  "options": "_time"
						},
						"properties": [
						  {
						    "id": "displayName",
						    "value": "Time"
						  }
						]
					}
				]
			},
      "transformations": [
        {
          "id": "organize",
          "options": {
            "indexByName": true,
            "renameByName": {
              "_time": "Time",
              "ticker": "Ticker",
              "source": "Source",
              "title": "Title",
              "url": "URL"
            },
            "excludeByName": {}
          }
        }
      ]
    }
  ]
}

